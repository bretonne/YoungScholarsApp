<?xml version="1.0" encoding="utf-8"?>
<ns:QContainer xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:ns="http://ns.renaun.com/mxml/2010"
			   flow="{ContainerFlow.HORIZONTAL}" 
			   size="{ApplicationModel.TitleBarHeight}" 
			   sizeUnit="{SizeUnit.PIXELS}"
			   complete="completeHandler(event)"
			   xmlns:buttons="qnx.ui.buttons.*" 
			   xmlns:listClasses="qnx.ui.listClasses.*" 
			   xmlns:components="com.aVictorio.youngScholars.views.components.*" 
	>
	<fx:Metadata>
		[Event(name="localeChanged", type="com.dpLightFramework.framework.control.GenericEvent")]
		[Event(name="titleSelected", type="com.dpLightFramework.framework.control.GenericEvent")]
	</fx:Metadata>
	<fx:Script>
		<![CDATA[
			import com.aVictorio.youngScholars.managers.IconManager;
			import com.aVictorio.youngScholars.model.ApplicationModel;
			import com.aVictorio.youngScholars.model.GameModel;
			import com.aVictorio.youngScholars.model.MainMenuModel;
			import com.aVictorio.youngScholars.model.MatchingCardFactory;
			import com.dpLightFramework.framework.control.GenericEvent;
			import com.dpLightFramework.framework.control.GenericEventProxy;
			
			import mx.resources.ResourceManager;
			import mx.states.OverrideBase;
			
			import qnx.ui.core.ContainerFlow;
			import qnx.ui.core.Containment;
			import qnx.ui.core.SizeMode;
			import qnx.ui.core.SizeUnit;
			import qnx.ui.data.DataProvider;
			import qnx.ui.listClasses.AlternatingCellRenderer;
			import qnx.ui.skins.SkinAssets;
			import qnx.ui.skins.buttons.RoundedButtonSkinBlack;
			
			protected var _titles:DataProvider;
			
			[Bindable]
			public function get titles():DataProvider
			{
				return _titles;
			}
			
			public function set titles(value:DataProvider):void
			{
				_titles = value;
				titleList.dataProvider  = _titles;
				titleList.selectedIndex =0;
			}
			
			public function setSelectedTitle(index:int):void
			{
				titleList.selectedIndex = index;
			}
			
			override protected function  onAdded():void
			{
				titleList.setListSkin(AlternatingCellRenderer);
			}

			protected function completeHandler(event:Event):void
			{
				logoBtn.setIcon(new IconManager.Logo());
				
				GenericEventProxy.getInstance().addEventListener("SetInitialLocale", setLocaleHandler, false, 0, true);
			}
			
			protected function selectLangueHandler(event:Event):void
			{
				var gameModel:GameModel = GameModel.instance;
				gameModel.currentLocale = langList.selectedItem.id as String;
				ResourceManager.getInstance().localeChain = [gameModel.currentLocale, 'en_US'];

				dispatchEvent(new GenericEvent("localeChanged", null, true, true));
			}
			
			protected function setLocaleHandler(event:GenericEvent):void
			{
				var locale:String = event.data as String;
				for each (var lan:Object in MainMenuModel.getInstnce().supportedLanguages)
				{
					if (lan.id == locale)
					{
						langList.selectedItem = lan;
						break;
					}
				}
				selectLangueHandler(null);
			}
		]]>
	</fx:Script>
	<components:GradientBackground 
		id="background" color="0xeeeeee"
		containment="{Containment.BACKGROUND}"/>

	<buttons:IconButton id="logoBtn" enabled="false" 
						containment="{Containment.CONTAINED}"
						size="100" sizeMode="{SizeMode.FLOW}" sizeUnit="{SizeUnit.PERCENT}"
						/>
	
	<listClasses:DropDown id="titleList" 
						  rowCount="8"
						  rowHeight="{ApplicationModel.TitleBarHeight}" 
						  size="{ApplicationModel.GameTitleWidth}" sizeMode="{SizeMode.FLOW}" sizeUnit="{SizeUnit.PIXELS}"
						  select="dispatchEvent(new GenericEvent('titleSelected', titleList.selectedIndex, true, true));"
						  />
	<listClasses:DropDown id="langList" 
						  rowCount="{MainMenuModel.getInstnce().supportedLanguages.length}"
						  rowHeight="{ApplicationModel.TitleBarHeight}" 
						  size="{ApplicationModel.LangListWidth}" sizeMode="{SizeMode.FLOW}" sizeUnit="{SizeUnit.PIXELS}"
						  dataProvider="{new DataProvider(MainMenuModel.getInstnce().supportedLanguages)}"
						  select="selectLangueHandler(event)"
						  />

</ns:QContainer>
